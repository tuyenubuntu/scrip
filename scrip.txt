Program Overview
This program will read an Excel file to get information about image categories and limits, then copy images from source folders to destination folders based on certain criteria. It also keeps track of which folders have already been copied to avoid duplication.

Program Design Outline
Data Source & Configuration:

Use an external file (e.g., type_e.xlsx) to define categories for each image (such as ElementType).
Create a dictionary that maps each image identifier (e.g., MixName) to its category. This is used to organize the copied images.
Logging Mechanism:

Maintain a log file (Copied_MixNames_{line_name}.xlsx) to record already copied image identifiers.
This log helps prevent re-copying the same images in subsequent program runs.
Copying Logic:

Set conditions for copying images:
Only copy images from folders that meet certain naming criteria (e.g., start with "C" and are exactly 7 characters).
Track the number of images copied to limit the total number of copied images (e.g., 2000 max).
Limit the number of images per category (e.g., no more than 1500 per ElementType).
Handle errors in copying (e.g., if a file is missing) and continue the process without interruptions.
Main Loop & Execution:

Define a main loop that iterates over each line name in a list of LineNames.
For each line, load the list of image folders, check if they meet the naming criteria, and copy images that haven't already been logged.
Step-by-Step Logic
Initialize the Program:

Import necessary libraries for file operations and data handling.
Load configuration data from an external Excel file to a dictionary.
Define Functions:

Load Config Data: Load categories (ElementType) from the Excel file into a dictionary for easy look-up.
Load Copied Log: Check if the log file exists for a given line name and load the previously copied items to avoid duplication.
Copy Files: For each image folder that meets the criteria, copy files to the destination folder if they haven’t already been copied and haven’t reached the copy limit.
Update Log: After copying, update the log file with newly copied images.
Run the Program:

Use a main loop to apply the function to each line name in the list, copying images according to the defined criteria.



Logic:

# Load configuration data from Excel (type_e.xlsx)
LOAD excel file as data_frame
CREATE dictionary: element_dict with MixName as key, ElementType as value

# Define main function to copy images
FUNCTION copy_images(src_root, dest_root, line_name):
    SET log_path = "Copied_MixNames_{line_name}.xlsx"
    IF log file exists:
        LOAD log file into copied_list as a set
    ELSE:
        INITIALIZE copied_list as an empty set

    INITIALIZE total_files_copied = 0
    INITIALIZE element_type_count = {}

    FILTER folders in src_root where folder name starts with "C" and length is 7

    FOR each mix_name in filtered folders:
        IF mix_name in copied_list:
            SKIP this mix_name

        element_type = element_dict[mix_name]
        IF element_type is None:
            SKIP this mix_name

        IF element_type_count[element_type] >= 1500:
            SKIP this element_type

        SET src_folders to paths for "A" and "B" tracks for this mix_name
        SET dest_folder = destination folder path based on element_type
        CREATE dest_folder if it does not exist

        FOR each src_folder in src_folders:
            IF src_folder does not exist:
                CONTINUE

            FOR each image file in src_folder:
                TRY to copy image to dest_folder
                IF copy successful:
                    INCREMENT total_files_copied
                    INCREMENT element_type_count[element_type]
                IF total_files_copied >= 2000 OR element_type_count[element_type] >= 1500:
                    BREAK loops as needed

            IF total_files_copied >= 2000:
                BREAK

    UPDATE log file with newly copied mix_names
    PRINT success message for each line

# Execute main function for each line name in line_name_list
FOR each line_name in line_name_list:
    CALL copy_images with src_root, dest_root, line_name



TIP:

Source and Destination Paths: Allow custom input for src_root and dest_root.
Copy Limits: Set adjustable limits for total_files_copied and per-category (element_type_count).
Log Management: Choose whether to keep or clear the log file after each run.
Folder Criteria: Define specific rules for valid folders (e.g., naming conventions).
Error Handling Options: Specify how errors should be managed (e.g., skip or halt).